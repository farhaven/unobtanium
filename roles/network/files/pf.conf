set skip on lo

# match all scrub (no-df random-id reassemble tcp)
# match in all scrub (no-df reassemble tcp)

# Spammers
block in quick from { 93.171.159.248, 193.189.117.148 }

pass out all
pass proto ospf
block return in log to (self)
pass on { tun gre enc }

anchor "tunnelbroker" {
	pass in from 216.66.80.30
}

anchor "ipsec" {
	pass proto { esp ipencap }
	pass proto { udp tcp } \
		to port { isakmp ipsec-nat-t }
}

pass \
	proto tcp \
	to port ssh

pass \
	proto tcp \
	to port { smtp smtps submission }

pass \
	proto tcp \
	to port { http 81 https }

pass \
	proto tcp \
	to port { 9001 9030 } # TOR

pass \
	proto tcp \
	to port 3260 # iscsi

pass \
	proto tcp \
	to port ident

pass \
	proto tcp \
	to port 4000

pass \
	proto { tcp udp } \
	to port 5001 # iperf

pass \
	proto { tcp udp } \
	to port domain

nurtic  = "37164"
nazco   = "37165"
petrus  = "37166"
gigadoc = "37167"
mwd     = "37168"
mwheeler= "37169"
packbart= "37170"
space   = "37171"
sammy   = "37172"
unbedenklich = "37173"
pr0j3ctx= "37174" 
psclrnnrt = "37175"
eri     = "2316"
leeps    = "37176"
florianb = "37177"

anchor "dn42" {
	pass \
		proto { tcp udp } \
		to port { 31218 37163 } # openvpn for dn42 link to stv0g

	pass \
		proto { tcp udp } \
		to port { $nazco $nurtic $petrus $gigadoc $mwd $mwheeler $packbart \
			 $space $sammy $unbedenklich $pr0j3ctx $psclrnnrt $eri $leeps \
			 $florianb }

	pass \
		proto tcp \
		to port bgp
}

pass \
	in inet \
	proto icmp all \
	icmp-type echoreq

pass \
	in inet6 \
	proto icmp6 all

anchor "tinc" {
	pass on tap0
	pass \
		proto { tcp udp } \
		to port 655
}

pass \
	proto udp \
	to port 60000:61000 # mosh
	
anchor "iodine" on tun11 {
	# Block everything except ICMP and SSH, so we can set up an SSH SOCKS5
	# proxy if needed.
	block log
	pass proto icmp \
		to (self)
	pass proto tcp \
		to (self) \
		port ssh
}

pass proto udp \
	to (self) \
	port 55000 # test port

pass proto tcp \
	to (self) \
	port 55000 # test port

block out log on egress from ! (self)
pass out on egress received-on tap0 # so i can use tinc for ipv6 access

table <v4_martians> const { 0/8 10/8 100.64/10 127/8 169.254/16 192/24
	192.0.2/24 192.168/16 192.18/16 198.51.100/24 203.0.113/24 224/4 240/4
	255.255.255.255/32 }
table <v6_martians> const { ::/128 ::1/128 ::ffff:0:0/96 ::/96 100::/64
	2001:10::/28 2001:db8::/32 fc00::/7 fe80::/10 fec0::/10 ff00::/8
	2002::/16	# 6to4
	2001:0::/32 # teredo
}

table <dn42_networks> const { fc00::/7 10/8 172.16/12 fe80::/8 }

block log on egress from { <v4_martians> <v6_martians> }
pass on egress from fe80::/8

pass quick on tap0
block log on tun from ! <dn42_networks>
